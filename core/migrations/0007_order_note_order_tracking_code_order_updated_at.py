# Generated by Django 5.1 on 2025-10-04 08:38

from django.db import migrations, models


def safe_add_fields_v2(apps, schema_editor):
    """Safely add fields if they don't exist (version 2)"""
    
    with schema_editor.connection.cursor() as cursor:
        # Check and add fields only if they don't exist
        fields_to_check = [
            ('tracking_code', "ALTER TABLE core_order ADD COLUMN tracking_code VARCHAR(100) NULL;"),
            ('note', "ALTER TABLE core_order ADD COLUMN note TEXT NULL;"),
            ('updated_at', "ALTER TABLE core_order ADD COLUMN updated_at TIMESTAMPTZ DEFAULT NOW();")
        ]
        
        for field_name, sql_command in fields_to_check:
            try:
                cursor.execute(f"SELECT {field_name} FROM core_order LIMIT 1;")
                # If we get here, field exists
                print(f"Field {field_name} already exists, skipping...")
            except Exception as e:
                # Field doesn't exist, add it
                print(f"Adding field {field_name}...")
                try:
                    cursor.execute(sql_command)
                except Exception as add_error:
                    print(f"Error adding {field_name}: {add_error}")


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_alter_order_options_order_note_order_tracking_code_and_more'),
    ]

    operations = [
        migrations.RunPython(safe_add_fields_v2, migrations.RunPython.noop),
    ]
